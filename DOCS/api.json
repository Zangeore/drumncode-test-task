{
    "openapi": "3.1.0",
    "info": {
        "title": "DrumNCode Test Task API",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http:\/\/localhost\/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "\/tasks\/{task}\/subtasks": {
            "post": {
                "operationId": "tasks.subtasks.store",
                "tags": [
                    "Subtask"
                ],
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "description": "The task ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/StoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TaskResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TaskResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                }
            }
        },
        "\/tasks": {
            "get": {
                "operationId": "tasks.index",
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at or -created_at or created_at,-completed_at"
                    },
                    {
                        "name": "filter[status]",
                        "in": "query",
                        "schema": {
                            "$ref": "#\/components\/schemas\/TaskStatusesEnum"
                        },
                        "example": "done"
                    },
                    {
                        "name": "filter[priority]",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 5
                        },
                        "example": 3
                    },
                    {
                        "name": "filter[title]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Task title"
                    },
                    {
                        "name": "filter[description]",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Task description"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `TaskResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TaskResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "tasks.store",
                "tags": [
                    "Task"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/App.Http.Requests.Task.StoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TaskResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TaskResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/tasks\/{task}": {
            "put": {
                "operationId": "tasks.update",
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "description": "The task ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/UpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TaskResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TaskResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "tasks.destroy",
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "description": "The task ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                }
            }
        },
        "\/tasks\/{task}\/mark-completed": {
            "post": {
                "operationId": "task.markCompleted",
                "tags": [
                    "Task"
                ],
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "description": "The task ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "App.Http.Requests.Task.StoreRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#\/components\/schemas\/TaskStatusesEnum"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 65535
                    }
                },
                "required": [
                    "status",
                    "priority",
                    "title",
                    "description"
                ],
                "title": "App.Http.Requests.Task.StoreRequest"
            },
            "StoreRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#\/components\/schemas\/TaskStatusesEnum"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 65535
                    }
                },
                "required": [
                    "status",
                    "priority",
                    "title",
                    "description"
                ],
                "title": "StoreRequest"
            },
            "TaskResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "parent_task_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "completed_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "children": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskResource"
                        }
                    },
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/TaskResource"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "parent_task_id",
                    "status",
                    "priority",
                    "title",
                    "description",
                    "created_at",
                    "completed_at",
                    "children",
                    "parent"
                ],
                "title": "TaskResource"
            },
            "TaskStatusesEnum": {
                "type": "string",
                "enum": [
                    "todo",
                    "done"
                ],
                "title": "TaskStatusesEnum"
            },
            "UpdateRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#\/components\/schemas\/TaskStatusesEnum"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 65535
                    }
                },
                "required": [
                    "status",
                    "priority",
                    "title",
                    "description"
                ],
                "title": "UpdateRequest"
            }
        },
        "responses": {
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}
